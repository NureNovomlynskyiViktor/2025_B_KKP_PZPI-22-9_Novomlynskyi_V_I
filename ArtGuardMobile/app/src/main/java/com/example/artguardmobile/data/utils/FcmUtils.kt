package com.example.artguardmobile.data.utils

import android.util.Log
import com.example.artguardmobile.data.model.FcmTokenDto
import com.example.artguardmobile.data.network.RetrofitInstance
import com.example.artguardmobile.data.storage.TokenStorage
import com.google.firebase.messaging.FirebaseMessaging
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch

object FcmUtils {
    fun sendFcmTokenIfAvailable() {
        val jwt = TokenStorage.getToken()
        if (jwt.isNullOrBlank()) {
            Log.w("FCM", "‚ö†Ô∏è JWT –Ω–µ–º–∞—î, —Ç–æ–∫–µ–Ω –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return
        }

        FirebaseMessaging.getInstance().token.addOnSuccessListener { token ->
            Log.d("FCM", "üí° –û—Ç—Ä–∏–º–∞–Ω–æ FCM —Ç–æ–∫–µ–Ω: $token")

            CoroutineScope(Dispatchers.IO).launch {
                try {
                    val response = RetrofitInstance.userApi.updateFcmToken(
                        FcmTokenDto(token),
                        "Bearer $jwt"
                    )
                    if (response.isSuccessful) {
                        Log.d("FCM", "‚úÖ FCM —Ç–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
                    } else {
                        Log.e("FCM", "‚ùå ${response.code()} ${response.message()}")
                    }
                } catch (e: Exception) {
                    Log.e("FCM", "üî• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ç–æ–∫–µ–Ω–∞", e)
                }
            }
        }
    }
}

